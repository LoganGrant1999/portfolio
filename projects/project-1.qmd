---
title: "Frogger"
date: "2024-09-17"
categories: [GitHub, Vercel, Claude Code]
---

## Overview

This project involved using Claude Code to write the code to needed to deveop a simple Frogger game

The primary purpose of this app is to:

- Demonstrate that a simple frogger application can be built using a CLI

## Live Product Demo

<div class="d-flex justify-content-center gap-3 my-4">
  <!-- Open App button -->
  <a class="btn btn-primary d-inline-flex align-items-center"
     href="https://product2-seven.vercel.app/"
     target="_blank" rel="noopener"
     aria-label="Open live app">
    <i class="fa-solid fa-window-restore me-2" aria-hidden="true"></i>
    Open App in New Tab
  </a>

  <!-- GitHub Source button -->
  <a class="btn btn-outline-dark d-inline-flex align-items-center"
     href="https://github.com/LoganGrant1999/product2.git"
     target="_blank" rel="noopener"
     aria-label="Open GitHub source">
    <i class="fa-brands fa-github me-2" aria-hidden="true"></i>
    View source on GitHub
  </a>
</div>

<iframe src="https://product2-seven.vercel.app/"
        style="width:100%; height:900px; border:none;"
        allowfullscreen>
</iframe>

## Technical Details

Framework/Stack: 100% HTML

Deployment: GitHub Pages + Vercel

Tools Used:
-   Claude Code

## Product Requirements Document

### Overview

A lightweight browser-based clone of the classic Frogger game. The player controls a frog that must cross a busy road and a river to reach the goal without colliding with obstacles.

### Goals

- Build a fully playable Frogger game with minimal features.

- Keep implementation simple, using Claude Code only.

- Deliver a functional, responsive web app.

### Core Features

- Player Movement

- Frog moves up, down, left, right with arrow keys.

- Movement is grid-based (one tile per input).

- Obstacles

- Cars move horizontally across the screen on multiple lanes.

- Logs float across the river and act as safe platforms.

### Gameplay Rules

- Frog dies on collision with car or water (unless on a log).

- Frog wins when reaching the top goal zone.

- Game restarts after win or loss.

### UI

- Simple score counter (tracks successful crossings).

- Restart button.

### Technical Requirements

- Frontend: HTML, CSS, JavaScript.

- No backend. All logic runs client-side.

- Assets: Minimalâ€”use colored rectangles for cars/logs/frog.

### Non-Goals

- No levels, menus, or advanced graphics.

- No multiplayer or sound effects.

### Success Criteria

- Game runs in browser with responsive controls.

- Frog can move, die, and win.

- Cars and logs animate smoothly.